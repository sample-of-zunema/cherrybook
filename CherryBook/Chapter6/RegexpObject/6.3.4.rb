# 正規表現と組み合わせると便利なStringクラスのメソッド


# scan
p '123 456 789'.scan(/\d+/)

p '1977年7月17日 2016年12月31日'.scan(/(\d+)年(\d+)月(\d+)日/)

p '1977年7月17日 2016年12月31日'.scan(/(?:\d+)年(?:\d+)月(?:\d+)日/)

p '1977年7月17日 2016年12月31日'.scan(/\d+年\d+月\d+日/)


# [],slice,slice!
text = '郵便番号は123-4567です'
p text[/\d{3}-\d{4}/]

# マッチする部分があ複数ある場合は、最初にマッチした文字列が返る
text2 = '123-4567 456-7890'
p text2[/\d{3}-\d{4}/]


# キャプチャを使うと第二引数で何番目のキャプチャを取得するか指定できる
p text3 = '誕生日は1977年7月17日です'

# 第二引数がないとマッチした部分全体が返る
p text3[/(\d+)年(\d+)月(\d+)日/]

# 第二引数を指定して３番目のキャプチャを取得する
p text3[/(\d+)年(\d+)月(\d+)日/,3]


# 名前つきキャプチャであれば名前で指定することもできる
text4 = '誕生日は1977年7月17日です'

# シンボルでキャプチャの名前を指定する
p text4[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, :day]

# 文字列でキャプチャの名前を指定する
p text4[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, 'month']


# sliceメソッドは[]のエイリアスメソッド
text5 = '郵便番号は123-4567です'
p text5.slice(/\d{3}-\d{4}/)

text6 = '誕生日は1977年7月17日です'
p text6.slice(/(\d+)年(\d+)月(\d+)日/,3)

# slice!にするとマッチした部分が破壊的に文字列から取り除かれる
p text7 = '郵便番号は123-4567'
p text7.slice!(/\d{3}-\d{4}/)
p text7


# split
p text8 = '123,456-789'

# 文字列で区切り文字を指定する
p text8.split(',')

# 正規表現を使ってカンマまたはハイフンを区切り文字に指定する
p text8.split(/,|-/)



# gsub,gsub!
p text9 = '123,456-789'

# 第一引数に文字列を渡すと、完全一致する文字列を第二引数で置き換える
p text9.gsub(',', ':')

# 正規表現を渡すと、マッチした部分を第二引数で置き換える
p text9.gsub(/,|-/, ':')

